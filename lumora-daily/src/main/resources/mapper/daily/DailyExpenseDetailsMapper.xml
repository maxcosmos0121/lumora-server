<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lumora.daily.mapper.DailyExpenseDetailsMapper">

    <resultMap type="com.lumora.daily.domain.DailyExpenseDetails" id="DailyExpenseDetailsResult">
        <result property="expenseDetailsId"    column="expense_details_id"    />
        <result property="expenseId"    column="expense_id"    />
        <result property="expenseType"    column="expense_type"    />
        <result property="expenseAmount"    column="expense_amount"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectDailyExpenseDetailsVo">
        select expense_details_id, expense_id, expense_type, expense_amount, del_flag, create_by, create_time, update_by, update_time, remark from daily_expense_details
    </sql>

    <select id="selectDailyExpenseDetailsList" parameterType="com.lumora.daily.domain.DailyExpenseDetails" resultMap="DailyExpenseDetailsResult">
        <include refid="selectDailyExpenseDetailsVo"/>
        <where>
            <if test="expenseId != null "> and expense_id = #{expenseId}</if>
            <if test="expenseType != null  and expenseType != ''"> and expense_type = #{expenseType}</if>
            <if test="expenseAmount != null "> and expense_amount = #{expenseAmount}</if>
        </where>
    </select>

    <select id="selectDailyExpenseDetailsByExpenseDetailsId" parameterType="Long" resultMap="DailyExpenseDetailsResult">
        <include refid="selectDailyExpenseDetailsVo"/>
        where expense_details_id = #{expenseDetailsId}
    </select>

    <insert id="insertDailyExpenseDetails" parameterType="com.lumora.daily.domain.DailyExpenseDetails" useGeneratedKeys="true" keyProperty="expenseDetailsId">
        insert into daily_expense_details
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="expenseId != null">expense_id,</if>
            <if test="expenseType != null">expense_type,</if>
            <if test="expenseAmount != null">expense_amount,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="expenseId != null">#{expenseId},</if>
            <if test="expenseType != null">#{expenseType},</if>
            <if test="expenseAmount != null">#{expenseAmount},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateDailyExpenseDetails" parameterType="com.lumora.daily.domain.DailyExpenseDetails">
        update daily_expense_details
        <trim prefix="SET" suffixOverrides=",">
            <if test="expenseId != null">expense_id = #{expenseId},</if>
            <if test="expenseType != null">expense_type = #{expenseType},</if>
            <if test="expenseAmount != null">expense_amount = #{expenseAmount},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where expense_details_id = #{expenseDetailsId}
    </update>

    <delete id="deleteDailyExpenseDetailsByExpenseDetailsId" parameterType="Long">
        delete from daily_expense_details where expense_details_id = #{expenseDetailsId}
    </delete>

    <delete id="deleteDailyExpenseDetailsByExpenseDetailsIds" parameterType="String">
        delete from daily_expense_details where expense_details_id in
        <foreach item="expenseDetailsId" collection="array" open="(" separator="," close=")">
            #{expenseDetailsId}
        </foreach>
    </delete>
</mapper>
